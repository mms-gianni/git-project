
name: Upload Release Asset

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Bump version
      id: bump_version
      run: | 
        export VERSION=$(echo ${{ github.ref }} | awk -F'/' '{print $3}')
        sed -i "s/DEV-VERSION/$VERSION/g" main/main.go

    - name: Build
      id: build_release
      run: make all

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload linux binary
      id: upload-release-linux-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./cmd/git-project/git-project.linux.64bit
        asset_name: git-project.linux.64bit
        asset_content_type: application/x-binary
    - name: Upload mac binary
      id: upload-release-mac-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./cmd/git-project/git-project.mac.64bit
        asset_name: git-project.mac.64bit
        asset_content_type: application/x-binary
    - name: Upload windows binary
      id: upload-release-windows-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./cmd/git-project/git-project.windows.64bit
        asset_name: git-project.windows.64bit
        asset_content_type: application/x-binary
    - name: Add and push binaries
      run: |
        git config --global user.email "gicara+gitproject@gmail.com"
        git config --global user.name "Build Job"
        git add cmd/git-project/*.64bit
        git commit -m "added rebuilded binaries"
        git push origin HEAD:master